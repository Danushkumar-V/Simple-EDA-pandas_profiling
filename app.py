from tkinter import Button
import numpy as np
import pandas as pd
import streamlit as st
import requests
from streamlit_lottie import st_lottie
from pandas_profiling import ProfileReport
from streamlit_pandas_profiling import st_profile_report

def load_lottieurl(url: str):
    r = requests.get(url)
    if r.status_code != 200:
        return None
    return r.json()



lottie_hello = load_lottieurl("https://assets2.lottiefiles.com/packages/lf20_8autcbbt.json")


st.markdown('''
# Exploratory Data Analysis **Tool**

This **EDA tool** created using `Python` + `Streamlit` + `pandas-profiling` !

''')

st_lottie(
        lottie_hello,
        speed=1,
        reverse=True,
        loop=True,
        quality="low", # medium ; high# canvas
        height=400,
        width=400,
        key=None,
    )
st.header("Upload your Data here!")
given_file = st.file_uploader("Upload the csv file which should be analysed ")
st.subheader("Unfortunately pandas profiling can't work on some datasets. I will try to resolve this problem!")
if given_file is not None:
    @st.cache
    def get_csv():
        user_given_csv_file = pd.read_csv(given_file)
        return user_given_csv_file
    user_given_csv = get_csv()
    profrep = ProfileReport(user_given_csv, explorative = True)
    st.header('**Given CSV is...**')
    st.write(user_given_csv)
    st.write('---')
    st.header('** EDA report generated by pandas profiling report**')
    st_profile_report(profrep)
else:
    st.info("File not yet uploaded")
    if st.button('Click here to see report for random dataset'):
        @st.cache
        def get_data():
            random_df = pd.DataFrame(np.random.rand(5000,6),columns = ['random_a','random_b','random_c','random_e','random_f','random_g'])
            return random_df
        random_df = get_data()
        profrep_rand_data = ProfileReport(random_df, explorative = True)
        st.header('**Given CSV is...**')
        st.write(random_df)
        st.write('---')
        st.header('** EDA report generated by pandas profiling report**')
        st_profile_report(profrep_rand_data)
